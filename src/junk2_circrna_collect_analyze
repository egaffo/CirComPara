'''
Perform analyses on the circRNA results collected by each circRNA detection program.
Currently supported/implemented for:
    * CIRCexplorer
    * CIRI
    * findcirc
    * segecirc (segemehl)
'''

Import('*')

try:
    env = env.Clone()
    circrna_analyze_circexplorer
    circrna_analyze_ciri        
    circrna_analyze_findcirc    
    circrna_analyze_segecirc    
    GTF = circrna_analyze_GTF

except NameError:
    vars = Variables('vars.py')
    vars.Add('CSVS', '''A comma-separated list with the four circRNA result collection csv'''\
             ''' files. The order must be CIRCexplorer,ciri,find_circ,segecirc ''', 
             '''CIRCexplorer_compared.csv,ciri_compared.csv,find_circ_compared.csv,'''\
             '''segecirc_compared.csv''')
    vars.Add('GTF', 'The annotation file in GTF format to be intersected', 'merged.gtf')
    env = Environment(ENV=os.environ, SHELL = '/bin/bash',
                      variables=vars)
    Help(vars.GenerateHelpText(env))
    unknown = vars.UnknownVariables()
    if unknown:
        print "Run sample: unknown variables", unknown.keys()
        Exit(1)

    csvs = env['CSVS'].rstrip().split(',')
    circrna_analyze_circexplorer = csvs[0]
    circrna_analyze_ciri         = csvs[1]
    circrna_analyze_findcirc     = csvs[2]
    circrna_analyze_segecirc     = csvs[3]
    GTF = env['GTF']

## set logging id
log_id = "[COLLECT CIRCRNAS]"
try:
    env['LOG_PREFIX'] = env['LOG_PREFIX'] + log_id
except KeyError:
    env['LOG_PREFIX'] = log_id

env['ENV']['LOG_PREFIX'] = env['LOG_PREFIX']

cmd = '''{ convert_circrna_collect_tables.py -p circexplorer ${SOURCES[0]}; '''\
   '''convert_circrna_collect_tables.py -p ciri ${SOURCES[1]}; '''\
   '''convert_circrna_collect_tables.py -p findcirc ${SOURCES[2]}; '''\
   '''convert_circrna_collect_tables.py -p segecirc ${SOURCES[3]}; } | '''\
   '''bedtools intersect -wa -wb -a - -b ${SOURCES[4]} -s -loj | gzip -c > $TARGET'''

sources = [circrna_analyze_circexplorer, circrna_analyze_ciri, 
           circrna_analyze_findcirc, circrna_analyze_segecirc, GTF]
target = 'combined_circrnas.gtf.gz'
combine = env.Command(target, sources, cmd)

Return('combine')

