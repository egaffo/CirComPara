import os, csv 
from collections import defaultdict

## GET PROGRAM ARGUMENTS
vars = Variables('vars.py')
vars.Add('META', 'The metadata table file where you specify the project samples, etc.', 'meta.csv')
vars.Add('CPUS', 'Set number of CPUs', '4')
vars.Add('ANNOTATION', 'Gene annotation (Ensembl GFF)', '')
vars.Add('GENOME_FASTA', 'The FASTA file with the reference genome', 'genome.fa')

vars.Add('SEGEMEHL_INDEX', '''The .idx index for segemehl''', 'genome.idx')
vars.Add('BWA_INDEX', '''The index of the reference genome for BWA''','/path/to/index')
vars.Add('BWA_PARAMS','Extra parameters for BWA','')
vars.Add('CIRI', 'The full path to the CIRI_vx.x.pl perl script', '')

vars.Add('BOWTIE2_INDEX', '''The index of the reference genome for BOWTIE2''','/path/to/index')

env = Environment(ENV=os.environ,
                  variables=vars)
Help(vars.GenerateHelpText(env))
unknown = vars.UnknownVariables()
if unknown:
    print "Run sample: unknown variables", unknown.keys()
    Exit(1)

META         = env['META']
CPUS         = env['CPUS']
GENOME_FASTA = env['GENOME_FASTA']
ANNOTATION   = env['ANNOTATION']

SEGEMEHL_INDEX = env['SEGEMEHL_INDEX']
BWA_INDEX      = env['BWA_INDEX']
BWA_PARAMS     = env['BWA_PARAMS']
CIRI           = env['CIRI']

BOWTIE2_INDEX = env['BOWTIE2_INDEX']

SCONSCRIPT_HOME = os.path.join(env['ENV']['CIRCOMPARA_HOME'], 'src')

## set logging id
log_id = "[CIRCRNA METHODS]"
try:
    env['LOG_PREFIX'] = env['LOG_PREFIX'] + log_id
except KeyError:
    env['LOG_PREFIX'] = log_id

env['ENV']['LOG_PREFIX'] = env['LOG_PREFIX']

## READ META FILE AND MAKE SAMPLE DIRECTORIES
samples_dir = 'samples'

samples     = defaultdict(list)
conditions  = defaultdict(set)
with open(META) as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        samples[row['sample']].append(os.path.abspath(row['file']))
        conditions[row['condition']].add(row['sample'])

    ## PROCESS SAMPLES
    runs = []
    for sample in sorted(samples.keys()):
        sample_cpus         = CPUS
        sample_genome_fasta = GENOME_FASTA
        sample_annotation   = ANNOTATION
        sample_raw_reads    = samples[sample]

        sample_segemehl_index     = SEGEMEHL_INDEX
        ciri_bwa_index            = BWA_INDEX
        ciri_bwa_extra_parameters = BWA_PARAMS
        ciri_script               = CIRI

        bowtie2_index = BOWTIE2_INDEX
    
        sample_dir = os.path.join(samples_dir, sample)
        run_sample = SConscript(os.path.join(sample_dir, 'junk2_sample_circrna_methods'), 
                                src_dir = SCONSCRIPT_HOME, 
                                variant_dir = sample_dir, duplicate = 0,
                                exports = 'env sample_cpus sample_genome_fasta sample_annotation sample_raw_reads sample_segemehl_index ciri_bwa_index ciri_bwa_extra_parameters ciri_script bowtie2_index')
        runs.append(run_sample)

## CLEAN DIRS WHEN CLEANING TARGETS
Clean('.', samples_dir)

