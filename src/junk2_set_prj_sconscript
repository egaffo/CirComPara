import os,csv
from collections import defaultdict

def SymLink(target, source, env):
    '''Define Action to create symlinks'''
    os.symlink(os.path.abspath(str(source[0])), os.path.abspath(str(target[0])))

## GET PROGRAM ARGUMENTS
vars = Variables()
vars.Add('META', 'The metadata table file where you specify the project samples, etc.', 'meta.csv')
vars.Add('MAPPER', 'The aligner to map reads to the genome', 'segemehl') 
env = Environment(ENV=os.environ,
                  variables=vars)
Help(vars.GenerateHelpText(env))

## RETRIEVE INSTALLATION DIRECTORY AND SCRIPT FILE LOCATIONS
sconsscript = GetOption('file')
if not sconsscript:
    sconsscript = ['SConstruct']

installdir = os.path.dirname(os.path.realpath(sconsscript[0]))

## LIST CIRCOMPARA SCRIPTS
SRC_SCRIPTS = [os.path.join(installdir, f) for f in os.listdir(installdir) 
                       if os.path.isfile(os.path.join(installdir, f)) and not 
                       os.path.basename(f).startswith('.')]
#print SRC_SCRIPTS
project_dirs = ['src', 'build', 'data']

## READ METAFILE AND BUILD PROJECT STRUCTURE
adapters = defaultdict(list)
with open(env['META']) as csvfile:
    reader = csv.DictReader(csvfile)
    ## CREATE DIRECTORY STRUCTURE AND SET PROJECT FILES FOR EACH SAMPLE IN METAFILE TABLE
    for row in reader:
        ## GENERATE SAMPLE DIRECTORY STRUCTURE AND LINK SCRIPTS
        sample = row['sample']
        make_sampledir = env.Command(Dir(sample), [], Mkdir('$TARGET'))
        subdirs = []
        for subdir in project_dirs:
            subdirs.extend(env.Command(Dir(os.path.join(sample, subdir)), 
                                       [], Mkdir('$TARGET')))
        link_scripts = []
        for script in SRC_SCRIPTS:
            link_scripts.extend(env.Command(os.path.join(sample, 'src', 
                                                         os.path.basename(script)), 
                                            script, SymLink))

        ## LINK RAW DATA FILES
        sample_file = row['file']
        link_data = env.Command(os.path.join(sample, 'data', 
                                             os.path.basename(sample_file)), 
                                sample_file, SymLink)
        
        main_script = os.path.join(installdir, 'main_sconscript')
        link_main = env.Command(os.path.join(sample, os.path.basename(main_script)),
                                main_script,
                                SymLink)

        try:
            if not row['adapter'].strip() == '':
                adapter_file = os.path.abspath(row['adapter'])
            else:
                adapter_file = row['adapter'].strip()
        except KeyError:
            adapter_file = ''
        adapters[sample] = adapter_file
        
varfile_nodes = []
for sample,adapter in adapters.iteritems():
    samplevarfile = os.path.join(str(sample), 'vars.py')
    writeVarfile =  '''echo -e 'ADAPTER_FILE = "''' + adapter + \
                    '''"\\n' > $TARGET'''
    varfile_nodes.extend(env.Command(samplevarfile, [], writeVarfile))

